" Automatic installation
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins will be downloaded under the specified directory.
call plug#begin(has('nvim') ? stdpath('data') . '/plugged' : '~/.vim/plugged')

" Declare the list of plugins.
Plug 'tpope/vim-sensible'
" some thing like theme
Plug 'junegunn/seoul256.vim'
" auto complete
Plug 'github/copilot.vim'
" view directory tree by :NERDTree
Plug 'preservim/nerdtree'
" auto pair
Plug 'tpope/vim-surround'
" comment
Plug 'tpope/vim-commentary'
" git
Plug 'tpope/vim-fugitive'
" status & tabline
Plug 'itchyny/lightline.vim'

Plug 'editorconfig/editorconfig-vim'
" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" statusline cfg
runtime cfg/lightline.vim 

set tabstop=4 softtabstop=4 shiftwidth=4 smarttab
set number relativenumber
set hlsearch
syntax on

let g:EditorConfig_exclude_patterns = ['fugitive://.*']

set splitbelow splitright

" COPILOT 
" get help by :h Copilot
" set keymap <C-L> to accept next word in auto complete
imap <C-L> <Plug>(copilot-accept-word)

" NERDTree
" get help by :h NERDTree
" set keymap <C-E> to open NERDTree
nnoremap <C-E> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

" Start NERDTree when Vim starts with a directory argument.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') |
    \ execute 'NERDTree' argv()[0] | wincmd p | enew | execute 'cd '.argv()[0] | endif

" Tab navigation
nnoremap <A-n> :tabnext<CR>
nnoremap <A-p> :tabprev<CR>\

" Pane navigation
nnoremap <A-h> <C-w>h
nnoremap <A-l> <C-w>l
nnoremap <A-k> <C-w>k
nnoremap <A-j> <C-w>j

nnoremap <C-D> <C-D>zz
nnoremap <C-U> <C-U>zz

nnoremap n nzzzv
nnoremap N Nzzzv

nnoremap k gk
nnoremap j gj
